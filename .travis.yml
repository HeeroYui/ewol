language: cpp

sudo: false

os:
	- linux
	- osx

branches:
	only:
		- master
		- dev

addons:
	apt:
		sources:
			- ubuntu-toolchain-r-test
		packages:
			- g++-4.9

matrix:
	include:
		- os: linux
			env: CONF=debug BUILDER=gcc GCOV=--gcov TARGET=-tLinux
		- os: linux
			env: CONF=release BUILDER=gcc TARGET=-tLinux TAG=Linux
		- os: linux
			env: CONF=release BUILDER=clang TARGET=-tLinux
		#- os: linux
		#	env: CONF=release BUILDER=gcc TARGET=-tWindows TAG=Mingw
		- os: osx
			env: CONF=release BUILDER=clang TARGET=-tMacOs TAG=MacOs
		- os: osx
			env: CONF=release BUILDER=clang TARGET=-tIOs TAG=IOs
	exclude:
		- os: linux
		- os: osx

install:
	- pip install --user lutin

before_script:
	- cd ..
	- wget http://atria-soft.com/ci/coverage_send.py
	- wget http://atria-soft.com/ci/test_send.py
	- wget http://atria-soft.com/ci/warning_send.py
	- wget http://atria-soft.com/ci/build_send.py
	- mkdir bin
	- curl https://storage.googleapis.com/git-repo-downloads/repo > bin/repo
	- chmod a+x bin/repo
	- git config --global user.email "travis@travis.com"
	- git config --global user.name "Travis"
	- git config --global color.ui "auto"
	- git config --global core.editor "vi"
	- mkdir WORKING_DIRECTORY
	- cd WORKING_DIRECTORY
	- ../bin/repo init -u https://github.com/atria-soft/manifest.git
	- ../bin/repo sync -j8
	- rm -rf atria-soft/ewol
	- cd ..
	- pwd
	- ls -l
	- if [ "$BUILDER" == "gcc" ]; then
				COMPILATOR_OPTION="--compilator-version=4.9";
		else
				COMPILATOR_OPTION="";
		fi
	- if [ "$TRAVIS_OS_NAME" == "osx" ]; then
				export PATH=$PATH:/Users/travis/Library/Python/2.7/bin/;
		fi
	- python ./build_send.py --tag=$TAG --status=START;

script:
	- lutin -w -j4 -C -P $TARGET -c $BUILDER $COMPILATOR_OPTION -m $CONF $GCOV ewol-test 0XX_customwidget 001_HelloWord; STATUS=$?
	- python ./build_send.py --tag=$TAG --status="$STATUS";

after_script:
	- if [ "$GCOV" != "" ]; then
				python ./warning_send.py --find-path ./out/Linux_x86_64/$CONF/build/$BUILDER/ewol/;
		fi
	- ./out/Linux_x86_64/$CONF/staging/$BUILDER/ewol-test/ewol-test.app/bin/ewol-test -l6 | tee out_test.txt
	- if [ "$GCOV" != "" ]; then
				python ./test_send.py --file=out_test.txt;
				lutin -C -P $TARGET -c $BUILDER $COMPILATOR_OPTION -m $CONF -p ewol?gcov;
				python ./coverage_send.py --json=out/Linux_x86_64/$CONF/build/$BUILDER/ewol/ewol_coverage.json;
		fi

notifications:
	email:
		- yui.heero@gmail.com
